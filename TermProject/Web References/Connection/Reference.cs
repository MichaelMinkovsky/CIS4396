//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TermProject.Connection {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DatabaseConnectionSoap", Namespace="http://tempuri.org/")]
    public partial class DatabaseConnection : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReturnUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnSecurityQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnStateNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertToUserDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUserPreferencesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DatabaseConnection() {
            this.Url = global::TermProject.Properties.Settings.Default.TermProject_Connection_DatabaseConnection;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReturnUsersCompletedEventHandler ReturnUsersCompleted;
        
        /// <remarks/>
        public event ReturnSecurityQuestionCompletedEventHandler ReturnSecurityQuestionCompleted;
        
        /// <remarks/>
        public event ReturnStateNamesCompletedEventHandler ReturnStateNamesCompleted;
        
        /// <remarks/>
        public event InsertToUserDataTableCompletedEventHandler InsertToUserDataTableCompleted;
        
        /// <remarks/>
        public event InsertUserPreferencesCompletedEventHandler InsertUserPreferencesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReturnUsers() {
            object[] results = this.Invoke("ReturnUsers", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnUsersAsync() {
            this.ReturnUsersAsync(null);
        }
        
        /// <remarks/>
        public void ReturnUsersAsync(object userState) {
            if ((this.ReturnUsersOperationCompleted == null)) {
                this.ReturnUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnUsersOperationCompleted);
            }
            this.InvokeAsync("ReturnUsers", new object[0], this.ReturnUsersOperationCompleted, userState);
        }
        
        private void OnReturnUsersOperationCompleted(object arg) {
            if ((this.ReturnUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnUsersCompleted(this, new ReturnUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnSecurityQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReturnSecurityQuestion() {
            object[] results = this.Invoke("ReturnSecurityQuestion", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnSecurityQuestionAsync() {
            this.ReturnSecurityQuestionAsync(null);
        }
        
        /// <remarks/>
        public void ReturnSecurityQuestionAsync(object userState) {
            if ((this.ReturnSecurityQuestionOperationCompleted == null)) {
                this.ReturnSecurityQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnSecurityQuestionOperationCompleted);
            }
            this.InvokeAsync("ReturnSecurityQuestion", new object[0], this.ReturnSecurityQuestionOperationCompleted, userState);
        }
        
        private void OnReturnSecurityQuestionOperationCompleted(object arg) {
            if ((this.ReturnSecurityQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnSecurityQuestionCompleted(this, new ReturnSecurityQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnStateNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReturnStateNames() {
            object[] results = this.Invoke("ReturnStateNames", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnStateNamesAsync() {
            this.ReturnStateNamesAsync(null);
        }
        
        /// <remarks/>
        public void ReturnStateNamesAsync(object userState) {
            if ((this.ReturnStateNamesOperationCompleted == null)) {
                this.ReturnStateNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnStateNamesOperationCompleted);
            }
            this.InvokeAsync("ReturnStateNames", new object[0], this.ReturnStateNamesOperationCompleted, userState);
        }
        
        private void OnReturnStateNamesOperationCompleted(object arg) {
            if ((this.ReturnStateNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnStateNamesCompleted(this, new ReturnStateNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertToUserDataTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertToUserDataTable(string fName, string Lname, string state, string address, string city, string email, string user, string pass, string question1, string answer1, string question2, string answer2, string question3, string answer3) {
            this.Invoke("InsertToUserDataTable", new object[] {
                        fName,
                        Lname,
                        state,
                        address,
                        city,
                        email,
                        user,
                        pass,
                        question1,
                        answer1,
                        question2,
                        answer2,
                        question3,
                        answer3});
        }
        
        /// <remarks/>
        public void InsertToUserDataTableAsync(string fName, string Lname, string state, string address, string city, string email, string user, string pass, string question1, string answer1, string question2, string answer2, string question3, string answer3) {
            this.InsertToUserDataTableAsync(fName, Lname, state, address, city, email, user, pass, question1, answer1, question2, answer2, question3, answer3, null);
        }
        
        /// <remarks/>
        public void InsertToUserDataTableAsync(string fName, string Lname, string state, string address, string city, string email, string user, string pass, string question1, string answer1, string question2, string answer2, string question3, string answer3, object userState) {
            if ((this.InsertToUserDataTableOperationCompleted == null)) {
                this.InsertToUserDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertToUserDataTableOperationCompleted);
            }
            this.InvokeAsync("InsertToUserDataTable", new object[] {
                        fName,
                        Lname,
                        state,
                        address,
                        city,
                        email,
                        user,
                        pass,
                        question1,
                        answer1,
                        question2,
                        answer2,
                        question3,
                        answer3}, this.InsertToUserDataTableOperationCompleted, userState);
        }
        
        private void OnInsertToUserDataTableOperationCompleted(object arg) {
            if ((this.InsertToUserDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertToUserDataTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertUserPreferences", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertUserPreferences(string font, string FontColor, string background, string username) {
            this.Invoke("InsertUserPreferences", new object[] {
                        font,
                        FontColor,
                        background,
                        username});
        }
        
        /// <remarks/>
        public void InsertUserPreferencesAsync(string font, string FontColor, string background, string username) {
            this.InsertUserPreferencesAsync(font, FontColor, background, username, null);
        }
        
        /// <remarks/>
        public void InsertUserPreferencesAsync(string font, string FontColor, string background, string username, object userState) {
            if ((this.InsertUserPreferencesOperationCompleted == null)) {
                this.InsertUserPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUserPreferencesOperationCompleted);
            }
            this.InvokeAsync("InsertUserPreferences", new object[] {
                        font,
                        FontColor,
                        background,
                        username}, this.InsertUserPreferencesOperationCompleted, userState);
        }
        
        private void OnInsertUserPreferencesOperationCompleted(object arg) {
            if ((this.InsertUserPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUserPreferencesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReturnUsersCompletedEventHandler(object sender, ReturnUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReturnSecurityQuestionCompletedEventHandler(object sender, ReturnSecurityQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnSecurityQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnSecurityQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReturnStateNamesCompletedEventHandler(object sender, ReturnStateNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnStateNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnStateNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertToUserDataTableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertUserPreferencesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591